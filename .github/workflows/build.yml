name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

# concurrency:
#   group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
#   cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10"]

    env:
      PAGERDUTY_API_KEY: ${{ secrets.PAGERDUTY_API_KEY }}

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-pythonversion
        with:
          python-version: ${{ matrix.python-version }}

      - uses: ./.github/actions/setup-hatch
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build package
        run: "hatch build"

  test:
    name: Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10"]
    env:
      PAGERDUTY_API_KEY: ${{ secrets.PAGERDUTY_API_KEY }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - uses: ./.github/actions/setup-hatch
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run tests
        run: hatch run +py=${{ matrix.python-version }} test:cov

      - name: Upload to codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-aiopagerduty
          env_vars: OS,PYTHON

  lint:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - uses: ./.github/actions/setup-hatch
        with:
          python-version: "3.10"

      - name: Run linters
        run: hatch run lint:all

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: "Dependency Review"
        uses: actions/dependency-review-action@v2
