name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

# concurrency:
#   group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
#   cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  build:
    name: Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        # python-version: ["3.10", "3.11.0-rc.1"]
        python-version: ["3.10"]

    env:
      PAGERDUTY_API_KEY: ${{ secrets.PAGERDUTY_API_KEY }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Ensure latest pip
        run: python -m pip install --upgrade pip

      - name: Install pre-reqs
        run: pip install -r requirements.txt

      - name: Create test and lint envs
        run: |
          hatch env create
          hatch env create lint
          hatch env create test

      - name: Build package
        run: hatch build

      - name: hatch test
        run: hatch run test:cov

      - name: hatch lint
        run: hatch run lint:all

  # test:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: pylint
  #       run: pytest

  #     - name: Run the tests via hatch
  #       run: hatch run

  # lint:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Pylint
  #       run: pylint --enable-all-extensions aiopagerduty/*.py
  #     - name: mypy
  #       run: mypy --install-types --non-interactive aiopagerduty/*.py
